// Code generated by mockery v2.28.2. DO NOT EDIT.

package mocks

import (
	model "github.com/iamvkosarev/wishlist/back/internal/model"
	mock "github.com/stretchr/testify/mock"
)

// WishlistSaver is an autogenerated mock type for the WishlistSaver type
type WishlistSaver struct {
	mock.Mock
}

// SaveWishlist provides a mock function with given fields: ownerID, name, description, displayType
func (_m *WishlistSaver) SaveWishlist(ownerID int64, name string, description string, displayType model.DisplayType) (int64, error) {
	ret := _m.Called(ownerID, name, description, displayType)

	var r0 int64
	var r1 error
	if rf, ok := ret.Get(0).(func(int64, string, string, model.DisplayType) (int64, error)); ok {
		return rf(ownerID, name, description, displayType)
	}
	if rf, ok := ret.Get(0).(func(int64, string, string, model.DisplayType) int64); ok {
		r0 = rf(ownerID, name, description, displayType)
	} else {
		r0 = ret.Get(0).(int64)
	}

	if rf, ok := ret.Get(1).(func(int64, string, string, model.DisplayType) error); ok {
		r1 = rf(ownerID, name, description, displayType)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewWishlistSaver interface {
	mock.TestingT
	Cleanup(func())
}

// NewWishlistSaver creates a new instance of WishlistSaver. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewWishlistSaver(t mockConstructorTestingTNewWishlistSaver) *WishlistSaver {
	mock := &WishlistSaver{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
